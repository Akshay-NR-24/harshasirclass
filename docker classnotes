1) Install Docker 
	docker install ubuntu 

2) Create a Docker hub account 
	Login to your hub account  in the host machine 
		docker login 

3) Pull and try a sample image 
	a. docker pull ubuntu 
	b. docker pull jenkins/jenkins:lts

4) List the existing local images 
	docker images 

5) Try to create a container out of pulled image
	a. docker run -it -d ubuntu /bin/bash 
	b. docker run -it -d --name myjenkins -p 8080:8080 -p 50000:50000 -v /var/jenkins_home jenkins/jenkins:lts

6) List containers 
	docker ps 
		(or)
	docker container ls 

7) To get Jenkins admin password 
	docker logs <container_id / container_name> 


Docker 
	Docker is one of the tools that used the idea of the isolated resources to 
	create a container that allows applications to be packaged with all the 
	dependencies installed and ran wherever we wanted.
	
	Docker can only run on Linux machines this means I cant install Docker directly on Windows or any other OS.
	If I want install Docker on windows then I need to run a Linux VM in windows on top that I need to run Docker.

Virtualization (VM)
	- VM is way of running virtual OS on top a host OS using a special software called Hypervisor.
	- VM directly shares the hardware of the host OS. 

					VM 					vs 			Containerisation 
	1. Virtualization at hardware level  		1. Virtualization at OS level 
	2. Heavyweight - consume more host 		2. Lightweight
	   resources 	
	3. VM uses hypervisor 				3. containerisation tool is used 
	4. limited performance - Boot up time        4. Native performance - usually boot 
		is more which is in minutes 			   fast in seconds.
	5. Consumes more storage 				5. Shares OS storage means only uses 
												   required storage.
	6. Supports all OS 							6. Supports on Linux

host machine 
	This is the machine in which docker is running 
	

Docker images 

	List docker images 
	    docker images 

	To download a docker images / How to use hub images 
	   docker pull <image_name>:<tag>
		ex: docker pull ubuntu:18.04
	   
	   Note: If we won't provide any tag then docker will consider 'latest' as default tag
	
	To upload an images to a registry 
	   docker push <username>/<repo_name>:<tag>

		ex: docker push harshajain/my_ubuntu:1.0

	To tag a image 
	   docker tag <old_image>:<tag> <new_image>:<tag>
		
	To delete a image/images 
	   docker rmi <image_name1>:<tag> <image_name2>:<tag>
		    (OR)
	   docker rmi <image_id1> <image_id2>
		
          To force delete a image 
		docker rmi -f <image_id>
	
       To list all image id's 
	  docker images -q 

       To delete all the images 
	  docker images -q | xargs docker rmi
		        (OR)
	  docker rmi $(docker images -q)

Docker container 
	A container is a set of isolated processes and resources. Linux achieves 
	this by using namespaces, which allows processes to access only resources 
	in that particular namespace, which allows having a process tree means set 
	of processes that is completely independent of the rest of the systems processes.
	
	Docker definition: A container is a standard unit of software that packages 
	up code and all its dependencies so the application runs quickly and reliably 
	from one computing environment to another.

       To list all running containers 
	   docker ps 
		(or)
	   docker container ls 
       
       To list all containers 
	   docker ps -a 
 		(or)
	   docker container ls -a

       To Delete a container 	
	   docker rm <container_name>/<container_ID>
		
       To delete a running container 
	   
	1. Gracefull delete 
	   a. Stop the running container 
		docker stop <container_name>/<container_ID>
           b. Delete the stopped container 	
	        docker rm <container_name>/<container_ID>

	    Best way: docker rm $(docker stop <container_name>/<container_ID>)	

			(OR)

        2. Delete by force 
	      docker rm -f <container_name>/<container_ID> 
           
       To stop all running container 
	    docker stop $(docker ps -q)
       
       To delete all stopped containers 
	    docker rm $(docker ps -q --filter "status=exited")	 	
       			(OR)
	    docker container prune 
		
To clean docker environment 
	docker system prune 
	
	Note: except volumes it will remove below resources 
		- all stopped containers
  		- all networks not used by at least one container
  		- all dangling images
  		- all dangling build cache       
       
	To remove unused volumes 
	  docker system prune --volumes

        To remove only unused images 
	  docker image prune 

	To remove only stopped container 
	  docker container prune 

	To remove only un-attached volumes 
	  docker volume prune 
	
	To remove only unused network 
	  docker network prune 

	Note: To avoid user confirmation use '-f'
		ex: docker container prune -f 
			      (or)
		    yes | docker container prune 	 

	To create a container 
		docker run -it -d --name <container_name> <image>:<tag> 
		
		DESC: -i: Interactive mode
		      -t: enable tty terminal
 		      -d: To create container in detached mode (Background)
		      --name: To provide a used defined name to container.
			

Assignment: 
	docker cp 
	docker ls 
	docker pause
	docker restart 
	docker top - To list the processes running inside a container 
			docker top <contaienr_ID>
	docker logs 
	docker inspect 
	docker info 
